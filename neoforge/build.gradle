import net.darkhax.curseforgegradle.*

buildscript {
    repositories {
        mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
        maven {
            name = 'NeoForged'
            url = 'https://maven.neoforged.net/releases'
        }
    }
}
plugins {
    id 'java-library'
    id 'idea'
    id 'java'
    id 'net.neoforged.gradle.userdev' version "${neogradle_userdev}"
    id 'net.darkhax.curseforgegradle' version "${cursegradle_plugin_version}"
    id 'com.modrinth.minotaur' version "${modrinth_plugin_version}"
}

version = project.version
group = project.mod_group
archivesBaseName = "${project.mod_id}-neoforge-${project.minecraft_version}"

def at = project(":common").file("src/main/resources/META-INF/accesstransformer.cfg")
if (at.exists()) {
    minecraft.accessTransformers.file at
}

runs {
    configureEach {
        systemProperty 'mixin.debug.export', 'true'
        systemProperty 'forge.logging.console.level', 'debug'
        modSource project.sourceSets.main
    }

    client {
        workingDirectory project.file('run/client')
    }

    server {
        workingDirectory project.file('run/server')
    }
}


sourceSets.main.resources.srcDir 'src/generated/resources'

repositories {
    maven {
        name = "Curios Continuation" // TODO replace with official curios once released on 1.21
        url = uri("https://maven.octo-studios.com/releases")
    }
}

dependencies {
    implementation "net.neoforged:neoforge:${project.neoforge_version}"

    // Curios
    implementation "top.theillusivec4.curios:curios-neoforge:${curios_version}"

    // Configuration
    implementation "dev.toma.configuration:configuration-${minecraft_version}:${configuration_version}-neoforge"

    compileOnly project(":common")
}

tasks.named('compileJava', JavaCompile).configure {
    source(project(":common").sourceSets.main.allSource)
}

processResources {
    from project(":common").sourceSets.main.resources
}

jar {
    manifest {
        attributes([
                "Specification-Title"     : "${mod_name}",
                "Specification-Vendor"    : "${mod_authors}",
                "Specification-Version"   : project.jar.archiveVersion,
                "Implementation-Title"    : "${mod_name}",
                "Implementation-Version"  : project.jar.archiveVersion,
                "Implementation-Vendor"   : "${mod_authors}",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }

    exclude("${mod_id}.accesswidener")
}

tasks.register('publishToCurseForge', TaskPublishCurseForge) {
    dependsOn(tasks.jar)
    apiToken = CURSEFORGE_TOKEN
    debugMode = debug.toBoolean()

    def uploadFile = upload(curseforge_project_id, tasks.jar.archiveFile)
    uploadFile.changelogType = Constants.CHANGELOG_MARKDOWN
    uploadFile.changelog = file("../CHANGELOG.md").exists() ? file('../CHANGELOG.md') : "-- No changelog provided --"
    uploadFile.releaseType = Constants.RELEASE_TYPE_RELEASE
    uploadFile.displayName = "${mod_id}-neoforge-${minecraft_version}-${version}"
    uploadFile.addModLoader('NeoForge')
    uploadFile.addEnvironment('Client', 'Server')
    uploadFile.addJavaVersion("Java 21")
    uploadFile.addRequirement("configuration")
    compatible_mc_versions.split(",").each { gameVersion ->
        uploadFile.addGameVersion(gameVersion)
    }
}

List compatibleVersions = compatible_mc_versions.split(",")
modrinth {
    token = MODRINTH_TOKEN
    projectId = modrinth_project_id
    versionNumber = "${version}"
    versionName = "${mod_id}-fabric-${minecraft_version}-${version}"
    versionType = "release"
    uploadFile = jar
    gameVersions = compatibleVersions
    debugMode = debug.toBoolean()
    changelog = file("../CHANGELOG.md").exists() ? file("../CHANGELOG.md").text : "-- No changelog provided --"
    loaders = ["neoforge"]
    dependencies {
        required.project "configuration"
    }
}
tasks.modrinth.dependsOn(tasks.jar)
